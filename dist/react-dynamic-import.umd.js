!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):e.DynamicModuleLoader=t(e.React)}(this,function(l){"use strict";var p="default"in l?l.default:l;function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function b(e){return(b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function v(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],0<=t.indexOf(n)||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],0<=t.indexOf(n)||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function O(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function g(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var w=function(e){var t=e.name,n=e.error.message;return"Failed to fetch dynamic module: ".concat(t,".\nError: ").concat(n,".")},j=function(){return null};return function(e){var o=e.loader,t=e.isHOC,i=void 0!==t&&t,c=e.name,n=e.placeholder,u=void 0===n?j:n,r=e.errorHandler,f=void 0===r?w:r;if(!o||o&&"function"!=typeof o)throw new Error("'loader' is required and should be of type 'function'.");var a=function(e){function a(){var e,t,n,r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);for(var o=arguments.length,i=new Array(o),c=0;c<o;c++)i[c]=arguments[c];return n=this,m(O(O(t=!(r=(e=b(a)).call.apply(e,[this].concat(i)))||"object"!=typeof r&&"function"!=typeof r?O(n):r)),"isMounted",!1),m(O(O(t)),"state",{DynamicComponent:null,fetchError:null}),t}var t,n;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(a,l.Component),y((t=a).prototype,[{key:"componentDidMount",value:function(){var r=this;this.isMounted=!0;var e=o(c);if(!e||e&&!(e instanceof Promise))throw new Error("Expected 'loader' to return a 'Promise', it returned '".concat(s(e),"' instead."));o(c).then(function(e){var t=r.props.hocArgs,n=e.default||e;r.isMounted&&r.setState({DynamicComponent:i?n.apply(void 0,g(t)):n})}).catch(function(e){r.setState({fetchError:e})})}},{key:"componentWillUnmount",value:function(){this.isMounted=!1}},{key:"render",value:function(){var e=this.state,t=e.DynamicComponent,n=e.fetchError,r=this.props,o=(r.hocArgs,v(r,["hocArgs"]));return n?p.createElement(f,{error:n,name:c}):t?p.createElement(t,o):p.createElement(u,{name:c})}}]),n&&y(t,n),a}();return m(a,"displayName","DynamicImport".concat(i?":HOC":"","(").concat(c||"?",")")),i?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return p.createElement(a,d({},e,{hocArgs:t}))}}:a}});
//# sourceMappingURL=react-dynamic-import.umd.js.map
